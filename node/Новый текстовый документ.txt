https://github.com/nodejs/node/blob/master/lib/internal/modules/cjs/loader.js


Объект global и глобальные переменные
https://nodejs.org/api/globals.html



При запуске приложения из терминала/командной строки мы можем передавать ему параметры. Для получения параметров в коде приложения применяется массив process.argv.
Первый элемент этого массива всегда указывает на путь к файлу node.exe, который вызывает приложение. Второй элемент массив всегда указывает на путь к файлу приложения, который выполняется.


npm install jasmine-node --save-dev
--save
npm uninstall express
^4.14.0 Фактически это будет последняя доступная версия в промежутке от 4.14.0 до 5.0.0 (>=4.14.0 и <5.0.0).
npm install nodemon -g -g представляет сокращение от global и позволяет установить зависимость nodemon глобально для всех проектов на данной локальной машине.
nodemon app.js


Почему так происходит? Потому что все колбеки или функции обратного вызова в асинхронных функциях (в качестве таковой здесь используется функция setTimeout) помещаются в специальную очередь, и начинают выполняться после того, как все остальные синхронные вызовы в приложении завершат свою работу. Собственно поэтому выполнение колбека из функции setTimeout в примере выше происходит после выполнения вызова console.log("Завершение работы программы");. И стоит подчеркнуть, что в очередь колбеков переходит не функция, которая передается в display, а функция, которая передается в setTimeout.




Когда фреймворк Express получает запрос, этот запрос передается в конвейер обработки. Конвейер состоит из набора компонентов или middleware,
Middleware помогают выполнять некоторые задачи, которые должны быть сделаны до отправки ответа. Стандартная задача - логгирование запросов



Для обработки данных по определенному маршруту можно использовать ряд функций, в частности:
use
get
post
put
delete

///////////////////////////////////////////////////////////////////////////
Символы подстановок
app.get("/bo?k", function (request, response) {
    response.send(request.url)
});
Такой маршрут будет соответствовать строке запроса "/bk" или "/bok".
Символ + указывает, что предыдущий символ может встречаться 1 и более раз:
Символ звездочка * указывает, что на месте данного символа может находиться любое количество символов: "/bork", "/bonk", "/bor.dak", "/bor/ok" 
Скобки () позволяют оформить группу символов, которые могут встречаться в запросе: app.get("/book(.html)?" что подстрока ".html" может встречаться или отсутствовать в строке 
место определения маршрутов мы можем указывать регулярные выражения app.get(/.*(\.)html$/,


///////////////////////////////////////////////////////////////////////////
Переадресация

redirect([status,] path)
status задает статусный код переадресации. Если этот параметр не задан, тогда по умолчанию отправляется статусный код 302, который предполагает временную переадресацию.

Но мы можем указать статусный код 301, чтобы сделать переадресацию постоянной:
response.redirect(301, "/about");

app.use("/home/foo/bar"   десь идет переадресация с http://localhost:3000/home/foo/bar на http://localhost:3000/home


///////////////////////////////////////////////////////////////////////////
Передача данных приложению. Параметры строки запроса

Например, в запросе http://localhost:3000/about?id=3&name=Tome часть id=3&name=Tome представляет строку запроса.


///////////////////////////////////////////////////////////////////////////Router 
Параметры маршрута


///////////////////////////////////////////////////////////////////////////
Представления и движок представлений Handlebars
движок представлений (view engine), который также называют движок шаблонов (templte engine).
Вообще движков представлений в Express довольно много: Pug, Jade, Dust, Nunjucks, EJS, Handlebars и другие.

npm install hbs --save

частичные представления (partial views),


///////////////////////////////////////////////////////////////////////////
//Layout в Handlebars
npm install express-handlebars


///////////////////////////////////////////////////////////////////////////
Хелперы в Handlebars











































